---

- name: Assert that MinIO root user and password are set
  assert:
    that:
      - minio_root_user is truthy
      - minio_root_password is truthy
  no_log: true # contains root password
  tags: minio-env

- name: Configure MinIO environment
  blockinfile:
    dest: /etc/default/minio
    create: yes
    owner: minio-user
    group: minio-user
    mode: 0640
    marker: "# {mark} ANSIBLE MANAGED BLOCK minio-server"
    content: |
      # Environment file copied from _Deploy MinIO: Multi-Node Multi-Drive_,
      # https://min.io/docs/minio/linux/operations/install-deploy-manage/deploy-minio-multi-node-multi-drive.html#create-the-service-environment-file

      # Set the hosts and volumes MinIO uses at startup
      # The command uses MinIO expansion notation {x...y} to denote a
      # sequential series.

      MINIO_VOLUMES="http://minio-node-{1...4}-int.owntube.tv:9000/mnt/minio-disk{1...8}/minio"

      # Set all MinIO server options
      #
      # The following explicitly sets the MinIO Console listen address to
      # port 9001 on all network interfaces. The default behavior is dynamic
      # port selection.

      MINIO_OPTS="--console-address :9001"

      # Set the root username. This user has unrestricted permissions to
      # perform S3 and administrative API operations on any resource in the
      # deployment.

      MINIO_ROOT_USER={{ minio_root_user }}

      # Set the root password
      #
      # Use a long, random, unique string that meets your organizations
      # requirements for passwords.

      MINIO_ROOT_PASSWORD={{ minio_root_password }}

      # https://min.io/docs/minio/linux/reference/minio-server/settings/console.html#envvar.MINIO_BROWSER_REDIRECT_URL
      MINIO_BROWSER_REDIRECT_URL="https://minio.owntube.tv/console/"

      # Set to the URL of the load balancer for the MinIO deployment
      # This value *must* match across all MinIO servers. If you do
      # not have a load balancer, set this value to any *one* of the
      # MinIO hosts in the deployment as a temporary measure.
      MINIO_SERVER_URL="https://minio.owntube.tv"
  no_log: true # contains root password
  notify: Restart MinIO service
  tags: minio-env

- name: Enumerate all MinIO servers in the hosts file
  blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED BLOCK minio-server"
    content: |
      {% for host in groups[minio_servers_group] %}
      {{ hostvars[host].ansible_default_ipv4.address }} minio-{{ host }}-int.owntube.tv
      {% endfor %}
  notify: Restart MinIO service
  tags: minio-env

...
