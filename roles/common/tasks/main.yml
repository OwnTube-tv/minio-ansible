---

- name: Assert sysadmins are named
  ansible.builtin.fail: msg="sysadmins must be listed"
  when: not (sysadmins | length)
  tags: common

- name: Assert service account is named
  ansible.builtin.fail: msg="ansible_service_account must be named and list public_keys"
  when: not (ansible_service_account.user and ansible_service_account.public_keys | length)
  tags: common

- name: Configure sysadmin accounts
  ansible.builtin.user:
    name: "{{ item.user }}"
    state: present
    groups: sudo
    append: true
    shell: /bin/bash
  with_items: "{{ sysadmins }}"
  tags: common

- name: Set (exclusive) ~/.ssh/authorized_keys for sysadmins
  ansible.posix.authorized_key:
    user: "{{ item.user }}"
    key: "{{ item.id_rsa_pub }}"
    exclusive: yes
  with_items: "{{ sysadmins }}"
  tags: common

- name: Ensure service account user for Ansible exists
  ansible.builtin.user:
    name: "{{ ansible_service_account.user }}"
    groups: sudo
    state: present
    comment: "{{ ansible_service_account.comment }}"
    shell: /bin/bash
  tags: common

- name: Set (exclusive) ~/.ssh/authorized_keys for Ansible service account
  ansible.posix.authorized_key:
    user: "{{ ansible_service_account.user }}"
    state: present
    key: "{{ ansible_service_account.public_keys | join('\n') }}"
    exclusive: yes
  tags: common

- name: Allow passwordless sudo for Ansible service account
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^{{ ansible_service_account.user }} ALL=\(ALL\) NOPASSWD: ALL'
    line: "{{ ansible_service_account.user }} ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"
  become: yes
  tags: common

- name: Remove ~/.ssh/authorized_keys for 'root' user
  ansible.builtin.file:
    path: /root/.ssh/authorized_keys
    state: absent
  tags: common

- name: Disable root login and password authentication for sudoers in /etc/ssh/sshd_config
  ansible.builtin.blockinfile:
    dest: /etc/ssh/sshd_config.d/50-cloud-init.conf
    marker: "# {mark} ANSIBLE MANAGED BLOCK common"
    block: |
      PermitRootLogin no
      LoginGraceTime 10
      MaxAuthTries 2
      AllowUsers {{ sysadmins | map(attribute='user') | join(' ') + ' ' + ansible_service_account.user }}
      Match Group sudo
      	PasswordAuthentication no
  register: sshd_config_hardening
  tags: common

- name: Restart sshd to apply config changes
  ansible.builtin.service: name=sshd state=restarted
  when: sshd_config_hardening is changed
  tags: common

- name: Set timezone to Europe/Stockholm
  community.general.timezone:
    name: Europe/Stockholm
  tags: common

- name: Install base packages
  ansible.builtin.apt:
    name:
      - acl
      - tree
      - dlocate
      - jq
      - emacs
      - pigz
      - unzip
      - wget
      - net-tools
      - parallel
      - inetutils-traceroute
      - python3-venv
      - python3-kubernetes
      - bzip2
      - make
      - gcc
    autoremove: true
    state: present
  tags: common

- name: Ensure firewalld is not installed, as it conflicts with Calico iptables networking
  ansible.builtin.apt:
    name:
      - firewalld
      - python3-firewall
    state: absent
  tags: common

...
